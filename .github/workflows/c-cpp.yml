name: build kernel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Make clean
      working-directory: ./linux
      run: git pull origin master --ff-only
    - name: Enable ccache
      uses: hendrikmuhs/ccache-action@v1.2
    - name: Get current date
      id: date
      run: echo "stamp=$(date '+%s')" >> $GITHUB_ENV
    - name: Make mrproper
      working-directory: ./linux
      run: make mrproper
    - name: Make clean
      working-directory: ./linux
      run: make V=1 arch=x86_64 clean
    - name: Make allmodconfig
      working-directory: ./linux
      run: make V=1 arch=x86_64 allmodconfig
    - name: Collect module names
      working-directory: ./linux
      run: cat .config | grep "=m" > allmodconfig
    - name: Create config 
      working-directory: ./linux
      run: mv allmodconfig .config
    - name: update apt sources
      working-directory: ./linux
      run: sudo apt-get update
    - name: install generic kernel
      working-directory: ./linux
      run: sudo apt-get install -y linux-image-generic libelf-dev
    - name: default-config-options
      working-directory: ./linux
      run: ls /boot/config-* | head -n 1 | xargs -i cat {} | grep -v "CONFIG_SYSTEM_TRUSTED_KEYS" | grep -v "CONFIG_SYSTEM_REVOCATION_KEYS" | grep -v "=m" | grep -v "#" | grep "." >> .config
    - name: olddefconfig
      working-directory: ./linux
      run: make V=1 arch=x86_64 olddefconfig
    - name: Get kernel version string
      working-directory: ./linux
      id: version
      run: cat .config | grep CONFIG_BUILD_SALT >> $GITHUB_ENV
    - name: make-all
      working-directory: ./linux
      run: sudo make V=1 arch=x86_64 all
    - name: make-tarzst
      working-directory: ./linux
      run: sudo make V=1 arch=x86_64 tarzst-pkg
    - name: make-rpm
      working-directory: ./linux
      run: sudo make V=1 arch=x86_64 rpm-pkg
    - name: make-deb
      working-directory: ./linux
      run: sudo make V=1 arch=x86_64 deb-pkg
    - name: make-snap
      working-directory: ./linux
      run: sudo make V=1 arch=x86_64 snap-pkg
    - name: Create GH release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: linux-${{ env.stamp }}
        tag_name: linux-${{ env.stamp }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload artifacts to release draft
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: arch/x86_64/linux-${{ env.CONFIG_BUILD_SALT }}+.rpm
        asset_name: linux-${{ env.stamp }}.rpm
        asset_content_type: application/rpm
